// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModuleManagementEventHandler.DataAccess;

namespace ModuleManagementEventHandler.Migrations
{
    [DbContext(typeof(ModuleManagementDBContext))]
    [Migration("20210605093302_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Class", b =>
                {
                    b.Property<Guid>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FinalExamExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.HasIndex("ClassId");

                    b.HasIndex("FinalExamExamId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Exam", b =>
                {
                    b.Property<Guid>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ExamId");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Lecture", b =>
                {
                    b.Property<Guid>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LectureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LectureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LectureRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LectureId");

                    b.HasIndex("CourseId");

                    b.ToTable("Lecture");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Module", b =>
                {
                    b.Property<Guid>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Teacher", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ExamId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Course", b =>
                {
                    b.HasOne("ModuleManagementEventHandler.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("ModuleManagementEventHandler.Model.Exam", "FinalExam")
                        .WithMany()
                        .HasForeignKey("FinalExamExamId");

                    b.HasOne("ModuleManagementEventHandler.Model.Module", null)
                        .WithMany("Courses")
                        .HasForeignKey("ModuleId");

                    b.Navigation("Class");

                    b.Navigation("FinalExam");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Lecture", b =>
                {
                    b.HasOne("ModuleManagementEventHandler.Model.Course", null)
                        .WithMany("Lectures")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Student", b =>
                {
                    b.HasOne("ModuleManagementEventHandler.Model.Class", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassId");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Teacher", b =>
                {
                    b.HasOne("ModuleManagementEventHandler.Model.Course", null)
                        .WithMany("Teachers")
                        .HasForeignKey("CourseId");

                    b.HasOne("ModuleManagementEventHandler.Model.Exam", null)
                        .WithMany("Proctors")
                        .HasForeignKey("ExamId");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Course", b =>
                {
                    b.Navigation("Lectures");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Exam", b =>
                {
                    b.Navigation("Proctors");
                });

            modelBuilder.Entity("ModuleManagementEventHandler.Model.Module", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
